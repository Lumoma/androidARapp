plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    id 'androidx.room'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.0'
}

android {
    namespace 'com.example.abgabe'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.abgabe"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.10'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    room {
        schemaDirectory "$projectDir/schemas"
    }
}

dependencies {
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.navigation.runtime.ktx
    implementation libs.material
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.camera.lifecycle
    implementation libs.androidx.camera.view
    implementation libs.androidx.runtime.livedata
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    // AR
    implementation libs.android.ar.core
    implementation libs.androidx.core.ktx
    implementation libs.obj

    // ZXing (QR-Code)
    implementation libs.zxing.android.embedded

    // (Optional) Coil (Bildverarbeitung)
    implementation(libs.coil.compose)

    //Dependency Injection
        //Dagger - Hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.android.compiler)

        // OPTIONAL: For instrumentation tests
    androidTestImplementation  libs.hilt.android.testing
    kaptAndroidTest libs.hilt.compiler

        // OPTIONAL: For local unit tests
    testImplementation libs.hilt.android.testing
    kaptTest libs.hilt.compiler

    // Room
    implementation libs.androidx.room.runtime
    annotationProcessor libs.androidx.room.compiler
    implementation libs.androidx.room.ktx
    kapt libs.androidx.room.compiler

    //Ktor
    implementation(libs.ktor.client.core)
    implementation(libs.ktor.client.cio)
    implementation libs.ktor.client.json
    implementation libs.ktor.client.serialization
    implementation libs.ktor.serialization.kotlinx.json
    implementation libs.ktor.client.content.negotiation

    //Kotlinx Serialization
    implementation libs.kotlinx.serialization.json

    //Coil (Bildverarbeitung)
    implementation libs.coil.compose

    //Icons
    implementation libs.androidx.material.icons.extended
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}

